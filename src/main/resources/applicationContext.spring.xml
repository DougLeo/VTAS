<?xml version="1.1" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<description>spring核心配置</description>
	
	<context:component-scan base-package="com.Master.VTAS.service" />

	<!-- 引入配置文件 -->
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean> -->

	<!-- 定义事务管理 -->
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean> -->

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		自动扫描entity目录, 省掉Configuration.xml里的手工配置
		<property name="typeAliasesPackage" value="com.alensic.ifencl.webapp.management.entity" />
		自动扫描mapping.xml文件
		<property name="mapperLocations"
			value="classpath*:mapping/*.xml" />
		<property name="plugins"> 
			<list> 
				<bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor"> 
					<property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect" /> 
				</bean> 
			</list> 
		</property> 
	</bean> -->

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<!-- <bean id="ifenclManagementMybatisMapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.alensic.ifencl.webapp.management.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean> -->
	
	<!-- 开发环境 datasource -->
	<!-- <beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/jdbc.development.properties" />
		配置数据源
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			初始化连接大小
			<property name="initialSize" value="${initialSize}"></property>
			连接池最大数量
			<property name="maxActive" value="${maxActive}"></property>
			连接池最小空闲
			<property name="minIdle" value="${minIdle}"></property>
			获取连接最大等待时间
			<property name="maxWait" value="${maxWait}"></property>
		</bean>
	</beans> -->

	<!-- 生产环境 datasource -->
	<!-- <beans profile="production">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath:/jdbc.properties" />
		配置数据源
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			初始化连接大小
			<property name="initialSize" value="${initialSize}"></property>
			连接池最大数量
			<property name="maxActive" value="${maxActive}"></property>
			连接池最小空闲
			<property name="minIdle" value="${minIdle}"></property>
			获取连接最大等待时间
			<property name="maxWait" value="${maxWait}"></property>
		</bean>
	</beans> -->
</beans>